{"meta":{"title":"可视化是门手艺","subtitle":null,"description":null,"author":"禹洋","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"2019-W07 图表挑战总结","slug":"MM-2019W07","date":"2019-02-18T04:47:48.000Z","updated":"2019-02-18T05:00:15.012Z","comments":true,"path":"2019/02/18/MM-2019W07/","link":"","permalink":"http://yoursite.com/2019/02/18/MM-2019W07/","excerpt":"","text":"这次图表挑战是主题是特朗普的日程表。链接 密码:lm7k 。涉及的数据 作品 素材都在这里可以下载，以前的也会陆续补上。 一、图表选择因为分析问题的对象主要是时间，所以可以从三个维度来展示数据： 总体的工作时间分布 每周的工作时间分布 每天的工作时间分布 因为采集信息不多，缺失也有，还经历了圣诞-元旦假期，所以从按月度维度分析感觉意义不大，这里就不放月份维度了。 我们就从Andy精选的作品，以及小数点社区中提交作品中看一下，大家是怎么从三个维度来展示数据的。 Andy 精选的作品 维度一：总体的工作时间分布 蛋同学的局部。 我自己作品的局部，惯例放个教程。【Tableau技巧】如何画圆角条形图 柱状图其实就能直观的反应各个工作时间的占比关系，当然可以直接展示汇总时间，也可以展示比例。 博文使用了环形图来展示占比，也是正统的做法。 干脆直接使用 数字+图标 展示的效果也是意外的好。 有意思的是前三张国外的作品其实是完整的作品，也都只用了一张图。而我们小数点社区的作品的图表数量都很多。 现在社区提交作品的同学感觉越来越少，我觉得大家不要觉得图表挑战一定要用什么高大上的图，得出惊天的结论才能参加。不如从简单的柱状图开始，用心画一张图，做一次提交，相信你总会有所收获。 维度二：每周的工作类型分布 万能的柱状图。 我模仿的一个作品。 我自己的作品局部。 我个人觉得从日历形式展示，读者非常熟悉，能够有效减少读者的认知负担，信息传达和展示的效果都非常好，所以我也用做了主图。主要展示行政时间的占比。 下来依旧是教程【Tableau技巧】如何画日历热力图 博文用正方形热图的方式展示，与日历热图不同，对星期的数据做了汇总，增加了工作时间类型的维度，可以说是展示角度的不同选择。 蛋同学选择了 正方形热图 + 柱形图，我个人感觉图表表达信息有点重复，可以做些精简。 维度三：每天工作时间分布 Wendy堆同学的展示效果最好，其他作品展示方式类似，我就不放了。 使用日期甘特图的感觉是这次图表挑战展示效果非常好的图表类型，Wendy堆同学这次的外部信息补充，配色，排版效果都非常好，要是我评选，肯定是这次小数点社区的第一，可惜交的比较晚。 二、排版设计 DiegoTParker 的这个作品虽然简单，但却是我这次最喜欢的一个排版。为了突出特朗普行政时间占比高，直接将行政时间的柱形独立出分区，整个穿过了文字部分，可以说是用排版技巧，传达了作者想要表答 “行政时间占比很高” 的信息。 然后是 Elnisa Marques 的作品。排版方式很正统，文字和主图部分做了底色的区隔，可以学习一下。图标+关键数据 的组合我很喜欢。 最后介绍一下个人感觉这次图表挑战 最好的作品 。 public tableau地址 图表与主题的完美契合。 “Men build too many walls and not enough bridges” 先引用名人名言来讽刺特朗普的政策，逼格极高。 可视化的图表则是用对称的柱状图来构成的墙分拐角，呼应主题。 下方文字再吐槽一下 看新闻，打电话， 发推特的时间太多。。。 完美的居中排版，非常稳重。右侧本来图例还能起到一定的展示总体时间比例的功能，左侧使用了特朗普的头像进行的构图平衡。 配色上选用了深色的传说中的高贵系的配色方案，整体上有一种金属质感。 字体是选择了一种纤细的偏精致的无衬线字体，放个链接可以下载的。下载地址 再就没得吹了。 放一下自己的作品。 Tableau Public 最后再放一下相关数据作品的下载 链接 密码:lm7k 照常在博客更新一下，有更清晰的图片，方便的导航，希望能够方便你使用。有机会也会开一个微信公众号，方便手机端的阅读。 博客地址","categories":[{"name":"Tableau可视化","slug":"Tableau可视化","permalink":"http://yoursite.com/categories/Tableau可视化/"}],"tags":[{"name":"图表挑战","slug":"图表挑战","permalink":"http://yoursite.com/tags/图表挑战/"},{"name":"可视化","slug":"可视化","permalink":"http://yoursite.com/tags/可视化/"}]},{"title":"Tableau 画日历热力图","slug":"calender_heatmap","date":"2019-02-17T14:23:17.000Z","updated":"2019-02-17T14:31:13.257Z","comments":true,"path":"2019/02/17/calender_heatmap/","link":"","permalink":"http://yoursite.com/2019/02/17/calender_heatmap/","excerpt":"","text":"可以在tableau public下载本次可视化的文件。 数据选用默认的超市数据的2017年整年数据，也方便大家操作。 第一步：单月的日历框架 将 订单日期 字段拖放至 列工作区，修改日期显示层级为 离散-工作日 。 生成计算字段 当月周数 DATEDIFF(&#39;week&#39;, DATETRUNC(&#39;month&#39;, [订单日期]), [订单日期])，将该字段拖放至 行功能区，修改字段类型为 维度 离散 。 右击 当月周数 字段标题，取消勾选 显示标题 将 订单日期 字段拖放至 筛选器 ，通过 离散-年/月 筛选，选择一个月 将 销售额 字段拖放至 颜色标记卡 将 订单日期 字段拖放至 标签标记卡，修改日期显示层级为 离散-天 修改图表类型为 方形 第一步效果 我们实现了一个月的日历框架。 注意我们这设置行列关系使用的都是通过 离散字段 生成的 标题，也就是在工作区中，目前所有的字段都是 蓝色 状态，包括我们在使用筛选器，修改日期显示层级都选择的是离散。 如果 “蓝色” 和 “绿色” 字段的区别，可以看看官方教程 维度和度量（蓝色和绿色）。 第二步：调整显示效果 将英文星期标题显示修改为缩写 将图表类型修改为 圆形，调整标签的对齐方式 上下居中 左右居中 第二步效果 这一步选择了 圆 的图表类型，当然也可以尝试方形，甚至六边形。到了这一步其实已经基本完成了日历热力图的画法了，剩下的工作只是多个月份的排版。 第三步：全年排版 删除月份筛选器 生成字段 月份所在列 ,将该字段拖放到维度数据面板，再将该字段拖放至 列功能区。1234567891011121314CASE MONTH([订单日期])WHEN 1 THEN 1WHEN 2 THEN 2WHEN 3 THEN 3WHEN 4 THEN 1WHEN 5 THEN 2WHEN 6 THEN 3WHEN 7 THEN 1WHEN 8 THEN 2WHEN 9 THEN 3WHEN 10 THEN 1WHEN 11 THEN 2WHEN 12 THEN 3END 将 订单日期 拖放至 列功能区，调整日期显示层级为 离散-季度 将 第三步 中生成的两个字段，在图中的标题隐藏掉，方法同第一步.3 第三步效果 现在需要把月份的名称显示出来，步骤有点多，再添加一步。 第四步：添加月份标签 为了添加月份标签，需要用到双轴功能，所以 当月周数 字段会调整成 连续字段，将 当月周数 坐标轴反向。 生成一个计算字段 筛选周四，用来标记周四的位置，在周四上方添加月份信息。IF DATEPART(&#39;weekday&#39;, [订单日期]) = 4 then -1.5 END 将 筛选周四 字段拖放至 行功能区，调整度量方式为 求平均值。 对 筛选周四 字段进行，双轴-同步轴 操作。 调整 平均值(筛选周四) 字段的 标记卡。将图表类型 从 圆 -&gt; 文本 ，删除 颜色标记卡，将 订单日期 字段的显示层级修改为 离散-月份。 删除网格线，增加背景区分 最终效果 总结 其实画日历就是在折腾不同的 维度 来控制 标题 在不同的 行列中出现，通过折腾 度量 来控制坐标轴，从而控制数值显示内容。 这里还是要再强调一下熟悉一下基本的 蓝色与绿色 功能上的差异，其实这也是这次教程的最重要的额外收获。 最后回顾一下基本的步骤： 生成一个月的日历 通过外层增加控制字段，生成全年的日历 我个人至少学习到了： 将星期的显示方式修改为缩写 通过双轴来设置一个子图的标签 通过背景颜色 增强 子图之间的区隔 参考资料Viz Variety Show: When to use heatmap calendars VizWiz 照常在博客更新一下，有更清晰的图片，方便的导航，希望能够方便你使用。有机会也会开一个微信公众号，方便手机端的阅读。","categories":[{"name":"Tableau可视化","slug":"Tableau可视化","permalink":"http://yoursite.com/categories/Tableau可视化/"}],"tags":[{"name":"可视化","slug":"可视化","permalink":"http://yoursite.com/tags/可视化/"},{"name":"图表技巧","slug":"图表技巧","permalink":"http://yoursite.com/tags/图表技巧/"}]},{"title":"Tableau画圆角条形图","slug":"[tableau_tip]round_bar_plot","date":"2019-02-17T04:22:39.000Z","updated":"2019-02-17T14:27:09.751Z","comments":true,"path":"2019/02/17/[tableau_tip]round_bar_plot/","link":"","permalink":"http://yoursite.com/2019/02/17/[tableau_tip]round_bar_plot/","excerpt":"","text":"有时为了仪表板的综合效果，将直角的柱形图调整成圆角的柱形图能够有效匹配整体风格。比如上图中我使用了 圆角柱形图 来匹配日期的 圆形 。 这里介绍Tableau中圆角柱形图的画法。 第一步：创建普通柱形图数据使用软件自带的超市数据。 使用 类别 和 销售额 构建一个普通柱形图。 第二步：创建辅助变量 在 列功能区 使用生成 临时计算 的方法生成一个 AVG(0) 度量类型的字段 效果： 第三步：生成双柱图 将列功能区中的 AVG(0) 字段，拖入 总和(销售额) 的坐标轴上，生成一个双轴图。 效果： 第四步：更改图表类型为 线 调整图表类型为 线。 将 度量名称 拖入到 路径 标记卡。 通过调整 大小 标记卡，空值条形图的粗细。 最后清理一下各种标记，参考线，轴线的效果： 总结 创建普通柱形图 通过临时计算生成辅助字段 生成双柱图 修改图表类型为 线 参考资料：方法依旧来自于Andy Kriebel的 Tableau Tips，我照旧做了搬运 英文字幕。 照常在博客更新一下，有更清晰的图片，方便的导航，希望能够方便你使用。有机会也会开一个微信公众号，方便手机端的阅读。","categories":[{"name":"Tableau可视化","slug":"Tableau可视化","permalink":"http://yoursite.com/categories/Tableau可视化/"}],"tags":[{"name":"可视化","slug":"可视化","permalink":"http://yoursite.com/tags/可视化/"},{"name":"图表技巧","slug":"图表技巧","permalink":"http://yoursite.com/tags/图表技巧/"}]},{"title":"用Tableau_Prep的方式准备数据「TC18」【一起看TC】","slug":"tc-用Tableau-Prep的方式准备数据","date":"2019-02-09T14:47:00.000Z","updated":"2019-02-09T15:01:46.972Z","comments":true,"path":"2019/02/09/tc-用Tableau-Prep的方式准备数据/","link":"","permalink":"http://yoursite.com/2019/02/09/tc-用Tableau-Prep的方式准备数据/","excerpt":"","text":"开个新坑目前我找和Tableau相关的资料，大概有这么几个来源 文字资料 官方文档 官网的博客 Tableau的书籍 一些个人或者机构的教学向的Blog 视频资料 官方入门视频 Tableau Conference的视频 个人或者机构的教学向视频 其中很有意思的是Tableau Conference的内容。Tableau Conference（以下简称TC） 是Tableau每年举办的一次数据盛会，因为没有实际参与过，只是感觉活动非常多。其中很有用的部分是会有大量的现场分享，这些大部分都是有视频录像的，分享的内容包含Tableau新功能的介绍，新产品的介绍，高级技巧的分享以及在各行各业的应用。 看这种分享除了能够学到知识，还能学到演讲展示的技巧，PPT设计，流程控制等其他方面的知识 看TC的分享视频也有一定的问题，每个分享都在60分钟左右，时长不算短。真正的深入进去，你会发现很多分享之间会有一定的重复，分享的内容很有可能你也知道了。 基于以上两点，所以我计划把自己看过的分享视频的主要内容尽量记录一下，一方面我个人能够更对现场分享的内容有更深入的认识，一方面也能够方便其他朋友可以在看之前对整个视频有个宏观了解，所以准备开个「一起看TC」的新坑。 TC18：使用Tableau Prep 的方式准备数据英文字幕视频 一、主讲人介绍 主讲人在Tableau有三年多的工作经历，其中从17年11月开始专项产品经理工作，推测工作重点应该也是Tableau Prep。 作者在Tableau官网 上的博客 她也在官网的博客上面发了几篇有关Tableau Prep的文章，感兴趣的也可以读一读。 二、演讲内容Tableau Prep设计原则一：可视化与直观（Visual &amp; Direct）8:35 做操作时可以直接看到结果，例如各种数据清洗、创建计算字段、分组数据、删除数据。 软件中的 数据配置窗格 中，可以直观的看到数据集中每个字段的数值分布，离群值 使用颜色标记，来清晰的展示数据的来源，方便在 join 等操作中快速定位问题 Demo01: 介绍软件界面组成 介绍了常规的 join、union、filter 常规的数据准备方式 在 join 过程中能够直观的展示分别从两个数据源中保留和排除的部分以及各自的数量，这个功能真是眼前一亮。当然数据详情在右边的面板中也能看到。 Tableau Prep设计原则二：智能（Smart）20:38 对数据进行智能分组，可以处理一些很相近的数据但是不是完全一样的数据 处理可以对字段进行数据类型的选择，还增加了 数据角色 的标记，可以用来快速定位有错误的数据。 在 Union 过程中某些没有识别出来的字段，可以给出一定提示 使用者构建的可视化数据准备流程，Tableau Prep会在后台进行优化，例如如果最后一步进行了数据筛选过滤，后台实际上会在更高效的位置进行更早的数据过滤 这些智能的匹配能不能适用于中文环境还需要测试一下 Demo01： Tableau Prep设计原则三：与Tableau的功能整合 相同的数据连接方式 表达式使用相同的语法 可以在Tableau中预览 问答环节问题一：收费方式？暂时没定，如果2019年4月24，作为新品试用免费。如果拥有Tableau Desktop的使用许可，可以免费使用到2020年6月30日。 其他问题听不太清，我也没仔细听回答了。 三、我的总结更多的是在展示Tableau Prep的功能，或者说设计理念？确实展示了Tableau Prep的优点。作为入门了解Tableau，看看软件能干什么，有什么优点还是不错的。 几个小问题： - 没有提供素材数据，不能跟着操作，小遗憾 - 还是停留在产品经理的角度，在阐释设计的原则，展示的几点确实不错，但是真的没有特别惊艳的感觉，我还是主要想看看是不是软件能够解决一些特别的痛点 - 展示过程有Bug 有张展示 数据准备 与 数据分析的占比的图，我看很多人介绍Tableau Prep都使用了。没找到原图，这里留个样板，以后有需要可以自己照着做一张。","categories":[{"name":"数据准备","slug":"数据准备","permalink":"http://yoursite.com/categories/数据准备/"}],"tags":[{"name":"Tableau Prep","slug":"Tableau-Prep","permalink":"http://yoursite.com/tags/Tableau-Prep/"},{"name":"TC18","slug":"TC18","permalink":"http://yoursite.com/tags/TC18/"}]},{"title":"在Tableau中画雷达图【图表挑战】","slug":"mm-19w05-雷达图","date":"2019-02-07T03:06:35.000Z","updated":"2019-02-09T15:01:55.394Z","comments":true,"path":"2019/02/07/mm-19w05-雷达图/","link":"","permalink":"http://yoursite.com/2019/02/07/mm-19w05-雷达图/","excerpt":"","text":"这次还是彻底的模仿，模仿一个卡塔尔兄弟Mahfooj Khan的作品，顺便这次卡塔尔亚洲杯闯入决赛，甚是威武。 一、关于雷达图 交互地址 这是一个对漫威超级英雄能力值可是化的项目。通过雷达图 面积 快速判断英雄的整体强弱，通过 形状 快速判断英雄的类型，例如是敏捷型或者力量型等等。对比两个英雄时候，叠加两个雷达图尤其方便。 劣势：但是雷达图和其他在二维坐标下展示的图表相比，读取具体的数值不是特别方便和直观。 雷达图对多维数据的展示非常直观，从某种角度上也是是一种强化对比的图表类型，实际展示的数值不是最重要的。所以雷达图特别适合这种评分数据。比如这个英雄能力值的评分实际上就是一种对比机制，并不会对实际评分做具体的量化，比如对速度的评分实际并不会和百米速度相关。 这次图表挑战的数据恰巧也是评分数据，评分经过好几层的各种计算、综合，绝对大小已经没有实际意义。做出这个指数的目的就是在于比较不同国家的相对状况，或者衡量进步程度。 这次数据使用的是欧洲国家的 DESI 指数，分别从五个维度测量， 以下的教程主要参考 A Simple Way to Make a Radar Chart 来讲。 也参考了如何在Tableau中使用 雷达图（或蛛网图）- TC17「英文字幕」。 相关数据下载： https://pan.baidu.com/s/13SBr0J4PVKczEL0Uxi6h0A 密码:lm7k 二、雷达图原理Tableau中默认的坐标系是一个二维坐标系，当使用地图的时候才会切换成为地理坐标系。 我们的雷达图实际上是一个极坐标系，每个特征占据一个角度，通过 r 的长度来映射数据。我们想要做的就是把用极坐标描述的图形，在Tableau默认的二维坐标系中画出来。 所以雷达图的整体思路就是逐步翻译的过程： 原始数据 -&gt; 极坐标 -&gt; 二维平面坐标 三、在Tableau中画雷达图第零步：准备工作连接数据 第一步：构建描述极坐标的计算字段这一步就是 原始数据 -&gt; 极坐标 的计算字段的翻译 构建 Angel 计算字段，也就是极坐标中的 角度 参数。 构建Distence from the centre计算字段，也就是极坐标中的 r 参数。 第二步：构建描述二维平面坐标的计算字段极坐标 -&gt; 二维平面坐标 的计算字段的翻译 构建 x 计算字段，就是二维平面坐标的横轴坐标 构建 y 计算字段，就是二维平面坐标的纵轴坐标 第三步：构建五边形 先选择一个国家来画五边形，所以将国家拖入筛选器，在筛选器中只保留一个国家。 将 Indicator 拖放到 详细信息标记卡，设置Indicator排序为逆序。 修改 标记卡 的图表类型为 多边形 将 Angel 字段拖放到 路径标记卡，调整 Angel表计算的依据为依据 Indicator。 将 x 和 y 字段分别拖放至 列功能区 行功能区，并同时调整表计算依据，依据 Indicator。 回顾： 四个计算字段公式的含义 我们现在已经初步完成了一个五边形的绘制，所以短暂回顾一下这几个生成的计算字段所生成的公式到底完成了什么功能。 关于Angel RUNNING_SUM(2*PI()/MIN({COUNTD([Indicator])}))+PI()/2 MIN({countd([Indicator])}) 是用来计算整个数据源一共有多少个Indicator种类，如果你知道只有五个分析维度，实际上这里直接填写5也行2PI()/ 这部分实际上是把整个圆周分成了5份 RUNNING_SUM 我们看到在实际使用过程中，我们表计算的依据选择是 指数 这个字段，实际实现的效果是判断具体的 Indicator具体所在的角度，所以要对评分后的角度进行角度的累加将Angle作为多边形的路径，也是为了告知Tableau怎么对五个点进行连线。 +PI()/2 这部分是为了控制整个圆周的起点，我们可以调整这个值看看图形的效果。没有进行角度转换时，起点是x轴的正向方向 +PI() 的效果是轴的起始方向放到了x轴负方向。Distence from the centre Distence from the centre 就是计算了橘黄色线段的长度，使用维度的分数来映射。 x y* 的计算起始就是极坐标向二维平面坐标的转换。 第四步：添加背景 打开背景设定窗口 地图菜单 - 背景图像 - 数据源 添加背景分享文件中的背景图片 最终效果 简单的加入一个国家数据，然后将国家拖入颜色标记卡，调整颜色透明度，可以看到两国五维数据的对比。 第五步：美化这一步想加入一些点元素，强化维度数据的位置信息。 再拖放一个x字段到 列功能区，同时做 双轴 - 同步轴操作 将两个 标记卡 中的 度量名称 的 颜色标记卡 都删除掉 将新添加的 标记卡 修改为 圆 类型，调整一下颜色 最后效果最后清理一下轴和边框 完成！ 四、图表挑战中的具体应用这次尝试了一次长图式的排版，因为Tableau不能全屏显示排版，甚是痛苦，考虑到Tableau的主要服务对象暂时还不包括手机移动端，以后还是暂时不尝试长图了。 Columns 字段 (INDEX()-1)%[col_num] Rows 字段 INT((INDEX()-1)/[col_num]) 其实还是排上次六边形地图的套路，表计算的依据设置为 国家 国家的备注还是放到 仪表板 来排。 五、总结关于数据我个人觉得其实这次图表挑战的第一个关键点是对数据的理解。 和前几次图表挑战的 宠物数量，红酒产量，失业率相比，原始数据中的数据只是一个分数，挑战题目只是简单翻译了一下并没有介绍，所以搞清楚这些数据采集计算方式，才不会出一些原则性的错误。 资料具体可以查看官网，甚至中文百度也能找到一些有用的信息，我就不多引用数据了。 关于雷达图的设计这次做的还是基本没有交互设计的部分，但从五边形的覆盖对比角度其实就能增加一些交互功能，来丰富图表能够传达的信息。 比如就像我们的教程中一个雷达图中，叠加多国数据可以对比各个维度的优劣，当然也可以叠加统计数据，比如多国指标均值，多国指标中位数等。 比如可以增加年份的选项来进行叠加对比能够清晰的看到每个国家的各个维度指标变化的状况。 其实是我做图还不熟练，有些涉及到叠加的工作，还没想好数据怎么预先处理，所以有些想法只能暂时搁置。 Andy 自己画的几张图组织者Andy在2月1日也做了一个简短复盘，我们可以看看他的选择。 第一张是一个杠铃图的变种，没有交互设计，选择展示的主要信息还是各国 5年总体指标的进步 。 第二张是连线散点图，交互设计可以选择想要着重看的国家和两个维度。这张完全没法看综合指标，所以重点是看单个指标的变化情况。 第三张是 跳动图(Jitter Plot)，交互设计可选国家。整体展示了5年各国各个维度的分数分布，重点信息是展示了选定国家的指标在分布中的位置，可以说这张是单页信息覆盖最多的。 第四张是雷达图，没有交互设计，只显示2018年。和我们不同的是，设计了色调来展示整体分数，其实我觉得雷达图面积已经能够反映一定信息了。 看了四张图，其实我们也可以大体整理一下常规的图表展示的思路了。其实无非就是： 想要表达的重点 -&gt; 选择合适的图表 所以，我觉得我在日后图表挑战中尽量从不同关系 比较 分布 构成 等不同角度分析数据，为的是能够尽量熟悉各种图表的画法。 六、参考文章A Simple Way to Make a Radar Chart","categories":[{"name":"Tableau可视化","slug":"Tableau可视化","permalink":"http://yoursite.com/categories/Tableau可视化/"}],"tags":[{"name":"图表挑战","slug":"图表挑战","permalink":"http://yoursite.com/tags/图表挑战/"},{"name":"可视化","slug":"可视化","permalink":"http://yoursite.com/tags/可视化/"},{"name":"图表技巧","slug":"图表技巧","permalink":"http://yoursite.com/tags/图表技巧/"}]},{"title":"markdown 测试文档","slug":"markdown-test","date":"2019-02-01T08:30:42.000Z","updated":"2019-10-27T15:03:42.349Z","comments":true,"path":"2019/02/01/markdown-test/","link":"","permalink":"http://yoursite.com/2019/02/01/markdown-test/","excerpt":"","text":"『Cmd 技术渲染的沙箱页面，点击此处编写自己的文档』 Cmd Markdown 简明语法手册标签： Cmd-Markdown var divElement = document.getElementById('viz1572087117244'); var vizElement = divElement.getElementsByTagName('object')[0]; if ( divElement.offsetWidth > 800 ) { vizElement.style.width='1900px';vizElement.style.height='927px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1900px';vizElement.style.height='927px';} else { vizElement.style.width='100%';vizElement.style.height='2027px';} var scriptElement = document.createElement('script'); scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js'; vizElement.parentNode.insertBefore(scriptElement, vizElement); var divElement = document.getElementById('viz1572089025641'); var vizElement = divElement.getElementsByTagName('object')[0]; if ( divElement.offsetWidth > 800 ) { vizElement.style.width='1100px';vizElement.style.height='727px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1100px';vizElement.style.height='727px';} else { vizElement.style.width='100%';vizElement.style.height='727px';} var scriptElement = document.createElement('script'); scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js'; vizElement.parentNode.insertBefore(scriptElement, vizElement); --- ---- var divElement = document.getElementById('viz1572089415972'); var vizElement = divElement.getElementsByTagName('object')[0]; vizElement.style.width='1000px';vizElement.style.height='527px'; var scriptElement = document.createElement('script'); scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js'; vizElement.parentNode.insertBefore(scriptElement, vizElement); 1. 斜体和粗体使用 * 和 ** 表示斜体和粗体。 示例： 这是 斜体，这是 粗体。 2. 分级标题使用 === 表示一级标题，使用 — 表示二级标题。 示例： 1234567这是一个一级标题============================这是一个二级标题--------------------------------------------------### 这是一个三级标题 你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。 3. 外链接使用 [描述](链接地址) 为文字增加外链接。 示例： 这是去往 本人博客 的链接。 4. 无序列表使用 *，+，- 表示无序列表。 示例： 无序列表项 一 无序列表项 二 无序列表项 三 5. 有序列表使用数字和点表示有序列表。 示例： 有序列表项 一 有序列表项 二 有序列表项 三 6. 文字引用使用 &gt; 表示文字引用。 示例： 野火烧不尽，春风吹又生。 7. 行内代码块使用 `代码` 表示行内代码块。 示例： 让我们聊聊 html。 8. 代码块使用 四个缩进空格 表示代码块。 示例： 这是一个代码块，此行左侧有四个不可见的空格。 9. 插入图像使用 ![描述](图片链接地址) 插入图像。 示例： Cmd Markdown 高阶语法手册1. 内容目录在段落中填写 [TOC] 以显示全文内容的目录结构。 [TOC] 2. 标签分类在编辑区任意行的列首位置输入以下代码给文稿标签： 标签： 数学 英语 Markdown 或者 Tags： 数学 英语 Markdown 3. 删除线使用 ~~ 表示删除线。 这是一段错误的文本。 4. 注脚使用 [^keyword] 表示注脚。 这是一个注脚[^footnote]的样例。 这是第二个注脚[^footnote2]的样例。 5. LaTeX 公式$ 表示行内公式： 质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。 $$ 表示整行公式： $$\\sum_{i=1}^n a_i=0$$ $$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$ $$\\sum^{j-1}{k=0}{\\widehat{\\gamma}{kj} z_k}$$ 访问 MathJax 参考更多使用方法。 6. 加强的代码块支持四十一种编程语言的语法高亮的显示，行号显示。 非代码示例： 1$ sudo apt-get install vim-gnome Python 示例： 123456789101112@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' JavaScript 示例： 1234567891011121314151617/*** nth element in the fibonacci series.* @param n &gt;= 0* @return the nth element, &gt;= 0.*/function fib(n) &#123; var a = 1, b = 1; var tmp; while (--n &gt;= 0) &#123; tmp = a; a += b; b = tmp; &#125; return a;&#125;document.write(fib(10)); 7. 流程图示例12345678910st=&gt;start: Start:&gt;https://www.zybuluo.comio=&gt;inputoutput: verificationop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?sub=&gt;subroutine: Your Subroutinee=&gt;endst-&gt;io-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;sub-&gt;io 更多语法参考：流程图语法参考8. 序列图示例 1123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 示例 212345Title: Here is a titleA-&gt;B: Normal lineB--&gt;C: Dashed lineC-&gt;&gt;D: Open arrowD--&gt;&gt;A: Dashed open arrow 更多语法参考：序列图语法参考9. 甘特图甘特图内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。 12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 更多语法参考：甘特图语法参考10. Mermaid 流程图1234A[Hard edge] --&gt;|Link text| B(Round edge)B --&gt; C&#123;Decision&#125;C --&gt;|One| D[Result one]C --&gt;|Two| E[Result two] 更多语法参考：Mermaid 流程图语法参考11. Mermaid 序列图1234Alice-&gt;John: Hello John, how are you?loop every minute John--&gt;Alice: Great!end 更多语法参考：Mermaid 序列图语法参考12. 表格支持 项目 价格 数量 计算机 \\$1600 5 手机 \\$12 12 管线 \\$1 234 13. 定义型列表名词 1: 定义 1（左侧有一个可见的冒号和四个不可见的空格） 代码块 2: 这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格） 代码块（左侧有八个不可见的空格） 14. Html 标签本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格： &lt;table&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt; &lt;th&gt;星期一&lt;/th&gt; &lt;th&gt;星期二&lt;/th&gt; &lt;th&gt;星期三&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李强&lt;/td&gt; &lt;td&gt;张明&lt;/td&gt; &lt;td&gt;王平&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 值班人员 星期一 星期二 星期三 李强 张明 王平 15. 内嵌图标本站的图标系统对外开放，在文档中输入 &lt;i class=&quot;icon-weibo&quot;&gt;&lt;/i&gt; 即显示微博的图标： 替换 上述 i 标签 内的 icon-weibo 以显示不同的图标，例如： &lt;i class=&quot;icon-renren&quot;&gt;&lt;/i&gt; 即显示人人的图标： 更多的图标和玩法可以参看 font-awesome 官方网站。 16. 待办事宜 Todo 列表使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如： - [ ] **Cmd Markdown 开发** - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 - [ ] 支持以 PDF 格式导出文稿 - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) - [x] 改进 LaTex 功能 - [x] 修复 LaTex 公式渲染问题 - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers) - [ ] **七月旅行准备** - [ ] 准备邮轮上需要携带的物品 - [ ] 浏览日本免税店的物品 - [x] 购买蓝宝石公主号七月一日的船票 对应显示如下待办事宜 Todo 列表： Cmd Markdown 开发 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 支持以 PDF 格式导出文稿 新增Todo列表功能 语法参考 改进 LaTex 功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 语法参考 七月旅行准备 准备邮轮上需要携带的物品 浏览日本免税店的物品 购买蓝宝石公主号七月一日的船票 [^footnote]: 这是一个 注脚 的 文本。 [^footnote2]: 这是另一个 注脚 的 文本。","categories":[],"tags":[]}]}